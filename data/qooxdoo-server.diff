Index: qooxdoo/framework/source/class/qx/Class.js
===================================================================
--- qooxdoo/framework/source/class/qx/Class.js	(revision 27350)
+++ qooxdoo/framework/source/class/qx/Class.js	(working copy)
@@ -210,6 +210,18 @@
             this.__addMixin(clazz, config.include[i], false);
           }
         }
+
+        // Include web handlers
+        if (config.handlers)
+        {
+          this.__addWebHandlers(name, clazz, config.handlers);
+        }
+
+        // Include web assembly
+        if (config.assembly)
+        {
+          this.__addWebAssembly(name, clazz, config.assembly);
+        }
       }
 
       // Process environment
@@ -720,7 +732,9 @@
         "environment"   : "object", // Map
         "events"     : "object",    // Map
         "defer"      : "function",  // Function
-        "destruct"   : "function"   // Function
+        "destruct"   : "function",  // Function
+        "handlers"   : "object",     // Map
+        "assembly"   : "object"     // Map
       },
 
       "default" : null
@@ -1086,6 +1100,39 @@
     },
 
 
+      /**
+       * Attach web handlers
+       *
+       * @param clazz
+       * @param handlers
+       */
+    __addWebHandlers : function(name, clazz, handlers)
+    {
+        var proto = clazz.prototype;
+        proto["$$handlers"] = handlers;
+        for (var l in handlers)
+        {
+            var h = handlers[l];
+            if (!h)
+            {
+                throw new Error("Invalid web handlers config: '" + l + "' in class: '" + name + "'");
+            }
+            if (h.handler && !proto[h.handler])
+            {
+                throw new Error("Unknown web handler method: '" + h.handler + "' in class: '" + name + "'");
+            }
+        }
+
+    },
+
+    __addWebAssembly : function(name, clazz, assembly) 
+    {
+        var proto = clazz.prototype;
+        proto["$$assembly"] = assembly;
+
+    },
+
+
     /**
      * Attach properties to classes
      *
Index: qooxdoo/framework/source/class/qx/core/Environment.js
===================================================================
--- qooxdoo/framework/source/class/qx/core/Environment.js	(revision 27350)
+++ qooxdoo/framework/source/class/qx/core/Environment.js	(working copy)
@@ -805,48 +805,48 @@
       // plugin
       // /////////////////////////////////////////
       if (this.useCheck("plugin.gears")) {
-        this._checks["plugin.gears"] = qx.bom.client.Plugin.getGears;
+        this._checks["plugin.gears"] = false;//qx.bom.client.Plugin.getGears;
       }
 
       if (this.useCheck("plugin.quicktime")) {
-        this._checks["plugin.quicktime"] = qx.bom.client.Plugin.getQuicktime;
+        this._checks["plugin.quicktime"] = false;//qx.bom.client.Plugin.getQuicktime;
       }
       if (this.useCheck("plugin.quicktime.version")) {
-        this._checks["plugin.quicktime.version"] = qx.bom.client.Plugin.getQuicktimeVersion;
+        this._checks["plugin.quicktime.version"] = "";//qx.bom.client.Plugin.getQuicktimeVersion;
       }
 
       if (this.useCheck("plugin.windowsmedia")) {
-        this._checks["plugin.windowsmedia"] = qx.bom.client.Plugin.getWindowsMedia;
+        this._checks["plugin.windowsmedia"] = "";//qx.bom.client.Plugin.getWindowsMedia;
       }
       if (this.useCheck("plugin.windowsmedia.version")) {
-        this._checks["plugin.windowsmedia.version"] = qx.bom.client.Plugin.getWindowsMediaVersion;
+        this._checks["plugin.windowsmedia.version"] = "";//qx.bom.client.Plugin.getWindowsMediaVersion;
       }
 
       if (this.useCheck("plugin.divx")) {
-        this._checks["plugin.divx"] = qx.bom.client.Plugin.getDivX;
+        this._checks["plugin.divx"] = false;//qx.bom.client.Plugin.getDivX;
       }
       if (this.useCheck("plugin.divx.version")) {
-        this._checks["plugin.divx.version"] = qx.bom.client.Plugin.getDivXVersion;
+        this._checks["plugin.divx.version"] = "";//qx.bom.client.Plugin.getDivXVersion;
       }
 
       if (this.useCheck("plugin.silverlight")) {
-        this._checks["plugin.silverlight"] = qx.bom.client.Plugin.getSilverlight;
+        this._checks["plugin.silverlight"] = false;//qx.bom.client.Plugin.getSilverlight;
       }
       if (this.useCheck("plugin.silverlight.version")) {
-        this._checks["plugin.silverlight.version"] = qx.bom.client.Plugin.getSilverlightVersion;
+        this._checks["plugin.silverlight.version"] = "";//qx.bom.client.Plugin.getSilverlightVersion;
       }
 
       if (this.useCheck("plugin.flash")) {
-        this._checks["plugin.flash"] = qx.bom.client.Flash.isAvailable;
+        this._checks["plugin.flash"] = false;//qx.bom.client.Flash.isAvailable;
       }
       if (this.useCheck("plugin.flash.version")) {
-        this._checks["plugin.flash.version"] = qx.bom.client.Flash.getVersion;
+        this._checks["plugin.flash.version"] = "";//qx.bom.client.Flash.getVersion;
       }
       if (this.useCheck("plugin.flash.express")) {
-        this._checks["plugin.flash.express"] = qx.bom.client.Flash.getExpressInstall;
+        this._checks["plugin.flash.express"] = false;//qx.bom.client.Flash.getExpressInstall;
       }
       if (this.useCheck("plugin.flash.strictsecurity")) {
-        this._checks["plugin.flash.strictsecurity"] = qx.bom.client.Flash.getStrictSecurityModel;
+        this._checks["plugin.flash.strictsecurity"] = false;//qx.bom.client.Flash.getStrictSecurityModel;
       }
 
       if (this.useCheck("plugin.pdf")) {
@@ -860,24 +860,24 @@
       // IO
       // /////////////////////////////////////////
       if (this.useCheck("io.maxrequests")) {
-        this._checks["io.maxrequests"] = qx.bom.client.Transport.getMaxConcurrentRequestCount;
+        this._checks["io.maxrequests"] = 1;//qx.bom.client.Transport.getMaxConcurrentRequestCount;
       }
       if (this.useCheck("io.ssl")) {
-        this._checks["io.ssl"] = qx.bom.client.Transport.getSsl;
+        this._checks["io.ssl"] = false;//qx.bom.client.Transport.getSsl;
       }
       if (this.useCheck("io.xhr")) {
-        this._checks["io.xhr"] = qx.bom.client.Transport.getXmlHttpRequest;
+        this._checks["io.xhr"] = false;//qx.bom.client.Transport.getXmlHttpRequest;
       }
 
       // /////////////////////////////////////////
       // EVENTS
       // /////////////////////////////////////////
       if (this.useCheck("event.touch")) {
-        this._checks["event.touch"] = qx.bom.client.Event.getTouch;
+        this._checks["event.touch"] = false;//qx.bom.client.Event.getTouch;
       }
 
       if (this.useCheck("event.pointer")) {
-        this._checks["event.pointer"] = qx.bom.client.Event.getPointer;
+        this._checks["event.pointer"] = false;//qx.bom.client.Event.getPointer;
       }
 
       // /////////////////////////////////////////
@@ -898,10 +898,10 @@
         this._checks["html.filereader"] = qx.bom.client.Html.getFileReader;
       }
       if (this.useCheck("html.geolocation")) {
-        this._checks["html.geolocation"] = qx.bom.client.Html.getGeoLocation;
+        this._checks["html.geolocation"] = false;//qx.bom.client.Html.getGeoLocation;
       }
       if (this.useCheck("html.audio")) {
-        this._checks["html.audio"] = qx.bom.client.Html.getAudio;
+        this._checks["html.audio"] = false;//qx.bom.client.Html.getAudio;
       }
       if (this.useCheck("html.audio.ogg")) {
         this._checks["html.audio.ogg"] = qx.bom.client.Html.getAudioOgg;
@@ -919,76 +919,76 @@
         this._checks["html.audio.aif"] = qx.bom.client.Html.getAudioAif;
       }
       if (this.useCheck("html.video")) {
-        this._checks["html.video"] = qx.bom.client.Html.getVideo;
+        this._checks["html.video"] = false;//qx.bom.client.Html.getVideo;
       }
       if (this.useCheck("html.video.ogg")) {
-        this._checks["html.video.ogg"] = qx.bom.client.Html.getVideoOgg;
+        this._checks["html.video.ogg"] = false;//qx.bom.client.Html.getVideoOgg;
       }
       if (this.useCheck("html.video.h264")) {
-        this._checks["html.video.h264"] = qx.bom.client.Html.getVideoH264;
+        this._checks["html.video.h264"] = false;//qx.bom.client.Html.getVideoH264;
       }
       if (this.useCheck("html.video.webm")) {
-        this._checks["html.video.webm"] = qx.bom.client.Html.getVideoWebm;
+        this._checks["html.video.webm"] = false;//qx.bom.client.Html.getVideoWebm;
       }
       if (this.useCheck("html.storage.local")) {
-        this._checks["html.storage.local"] = qx.bom.client.Html.getLocalStorage;
+        this._checks["html.storage.local"] = false;//qx.bom.client.Html.getLocalStorage;
       }
       if (this.useCheck("html.storage.session")) {
-        this._checks["html.storage.session"] = qx.bom.client.Html.getSessionStorage;
+        this._checks["html.storage.session"] = false;//qx.bom.client.Html.getSessionStorage;
       }
       if (this.useCheck("html.classlist")) {
-        this._checks["html.classlist"] = qx.bom.client.Html.getClassList;
+        this._checks["html.classlist"] = false;//qx.bom.client.Html.getClassList;
       }
 
       if (this.useCheck("html.xpath")) {
-        this._checks["html.xpath"] = qx.bom.client.Html.getXPath;
+        this._checks["html.xpath"] = false;//qx.bom.client.Html.getXPath;
       }
       if (this.useCheck("html.xul")) {
-        this._checks["html.xul"] = qx.bom.client.Html.getXul;
+        this._checks["html.xul"] = false;//qx.bom.client.Html.getXul;
       }
 
       if (this.useCheck("html.canvas")) {
-        this._checks["html.canvas"] = qx.bom.client.Html.getCanvas;
+        this._checks["html.canvas"] = false;//qx.bom.client.Html.getCanvas;
       }
       if (this.useCheck("html.svg")) {
-        this._checks["html.svg"] = qx.bom.client.Html.getSvg;
+        this._checks["html.svg"] = false;//qx.bom.client.Html.getSvg;
       }
       if (this.useCheck("html.vml")) {
-        this._checks["html.vml"] = qx.bom.client.Html.getVml;
+        this._checks["html.vml"] = false;//qx.bom.client.Html.getVml;
       }
       if (this.useCheck("html.dataurl")) {
-        this._asyncChecks["html.dataurl"] = qx.bom.client.Html.getDataUrl;
+        this._asyncChecks["html.dataurl"] = false;//qx.bom.client.Html.getDataUrl;
       }
 
       // /////////////////////////////////////////
       // CSS
       // /////////////////////////////////////////
       if (this.useCheck("css.textoverflow")) {
-        this._checks["css.textoverflow"] = qx.bom.client.Css.getTextOverflow;
+        this._checks["css.textoverflow"] = false;//qx.bom.client.Css.getTextOverflow;
       }
 
       if (this.useCheck("css.placeholder")) {
-        this._checks["css.placeholder"] = qx.bom.client.Css.getPlaceholder;
+        this._checks["css.placeholder"] = false;//qx.bom.client.Css.getPlaceholder;
       }
 
       if (this.useCheck("css.borderradius")) {
-        this._checks["css.borderradius"] = qx.bom.client.Css.getBorderRadius;
+        this._checks["css.borderradius"] = false;//qx.bom.client.Css.getBorderRadius;
       }
 
       if (this.useCheck("css.boxshadow")) {
-        this._checks["css.boxshadow"] = qx.bom.client.Css.getBoxShadow;
+        this._checks["css.boxshadow"] = false;//qx.bom.client.Css.getBoxShadow;
       }
 
       if (this.useCheck("css.gradients")) {
-        this._checks["css.gradients"] = qx.bom.client.Css.getGradients;
+        this._checks["css.gradients"] = false;//qx.bom.client.Css.getGradients;
       }
 
       if (this.useCheck("css.boxmodel")) {
-        this._checks["css.boxmodel"] = qx.bom.client.Css.getBoxModel;
+        this._checks["css.boxmodel"] = false;//qx.bom.client.Css.getBoxModel;
       }
 
       if (this.useCheck("css.translate3d")) {
-        this._checks["css.translate3d"] = qx.bom.client.Css.getTranslate3d;
+        this._checks["css.translate3d"] = false;//qx.bom.client.Css.getTranslate3d;
       }
 
       if (this.useCheck("css.rgba")) {
@@ -999,11 +999,11 @@
       // PHONEGAP
       // /////////////////////////////////////////
       if (this.useCheck("phonegap")) {
-        this._checks["phonegap"] = qx.bom.client.PhoneGap.getPhoneGap;
+        this._checks["phonegap"] = false;//qx.bom.client.PhoneGap.getPhoneGap;
       }
 
       if (this.useCheck("phonegap.notification")) {
-        this._checks["phonegap.notification"] = qx.bom.client.PhoneGap.getNotification;
+        this._checks["phonegap.notification"] = false;//qx.bom.client.PhoneGap.getNotification;
       }
     }
   },
Index: qooxdoo/framework/source/class/qx/core/Assert.js
===================================================================
--- qooxdoo/framework/source/class/qx/core/Assert.js	(revision 27350)
+++ qooxdoo/framework/source/class/qx/core/Assert.js	(working copy)
@@ -79,7 +79,7 @@
       {
         var err = new qx.core.AssertionError(comment, msg);
         if (this.__logError) {
-          qx.Bootstrap.error("Stack trace: \n" + err.getStackTrace());
+          qx.Bootstrap.error("Stack trace: \n" + (err.getStackTrace() ? err.getStackTrace().join("\n") : null));
         }
         throw err;
       } else {
Index: qooxdoo/framework/source/class/qx/dev/StackTrace.js
===================================================================
--- qooxdoo/framework/source/class/qx/dev/StackTrace.js	(revision 27350)
+++ qooxdoo/framework/source/class/qx/dev/StackTrace.js	(working copy)
@@ -92,12 +92,12 @@
         }
       },
 
-      "mshtml|webkit" : function()
+      "mshtml" : function()
       {
         return this.getStackTraceFromCaller(arguments);
-      },
+      },     
 
-      "opera" : function()
+      "opera|webkit" : function()
       {
         var foo;
         try {
@@ -107,7 +107,7 @@
         catch (ex)
         {
           var trace = this.getStackTraceFromError(ex);
-          qx.lang.Array.removeAt(trace, 0)
+          qx.lang.Array.removeAt(trace, 0);
           return trace;
         }
         return [];
@@ -218,31 +218,8 @@
       "webkit" : function(error)
       {
         if (error.stack) {
-          /*
-           * Chrome trace info comes in two flavors:
-           * at [jsObject].function (fileUrl:line:char)
-           * at fileUrl:line:char
-           */
-          var lineRe = /at (.*)/gm;
-          var fileReParens = /\((.*?)(:[^\/].*)\)/;
-          var fileRe = /(.*?)(:[^\/].*)/;
-          var hit;
-          var trace = [];
-          while ((hit = lineRe.exec(error.stack)) != null) {
-            var fileMatch = fileReParens.exec(hit[1]);
-            if (!fileMatch) {
-              fileMatch = fileRe.exec(hit[1]);
-            }
-
-            if (fileMatch) {
-              var className = this.__fileNameToClassName(fileMatch[1]);
-              trace.push(className + fileMatch[2]);
-            } else {
-                trace.push(hit[1]);
-            }
-          }
-
-          return trace;
+            var trace =  error.stack.split(/\n/);
+            return trace.length > 0 ? trace.slice(1) : trace;
         }
         else if (error.sourceURL && error.line) {
           return [this.__fileNameToClassName(error.sourceURL) + ":" + error.line];
Index: qooxdoo/tool/pylib/generator/resource/ImageClipping.py
===================================================================
--- qooxdoo/tool/pylib/generator/resource/ImageClipping.py	(revision 27350)
+++ qooxdoo/tool/pylib/generator/resource/ImageClipping.py	(working copy)
@@ -153,7 +153,8 @@
         temp = os.fdopen(fileDescriptor, "w")
         temp.write("\n".join(clips))
         temp.close()
-        cmd = montage_cmd % (orientation, "@" + os.path.basename(tempPath), combined)
+        #cmd = montage_cmd % (orientation, "@" + os.path.basename(tempPath), combined)
+        cmd = montage_cmd % (orientation, " ".join(clips), combined)
         rc = os.system(cmd)
         os.unlink(tempPath)
         if rc != 0:
Index: qooxdoo/tool/pylib/generator/code/CodeGenerator.py
===================================================================
--- qooxdoo/tool/pylib/generator/code/CodeGenerator.py	(revision 27350)
+++ qooxdoo/tool/pylib/generator/code/CodeGenerator.py	(working copy)
@@ -394,8 +394,17 @@
 
         def compileClasses(classList, compConf, log_progress=lambda:None):
             result = []
+            nodeInc = self._job.get("compile-options/code/node_includes", False)
             for clazz in classList:
-                result.append(clazz.getCode(compConf))
+                fpath = clazz.path
+                result.append("\n//%s\n" % (clazz.id))
+                if nodeInc:
+                    if clazz.id.startswith("qx."):
+                        result.append(clazz.getCode(compConf))
+                    else:
+                        result.append("$$node.script.runInThisContext($$node.fs.readFileSync('%s'), '%s');" % (fpath, fpath))
+                else:
+                    result.append(clazz.getCode(compConf))
                 log_progress()
             return u''.join(result)
 
Index: qooxdoo/tool/pylib/generator/code/DependencyLoader.py
===================================================================
--- qooxdoo/tool/pylib/generator/code/DependencyLoader.py	(revision 27350)
+++ qooxdoo/tool/pylib/generator/code/DependencyLoader.py	(working copy)
@@ -195,6 +195,9 @@
         warn_deps = []
         logInfos = self._console.getLevel() == "info"
         ignored_names = set()
+        ignored_names.add("$$node")
+        ignored_names.add("$$node.process")
+        ignored_names.add("$$node.fs")
 
         # No dependency calculation
         if len(includeWithDeps) == 0:
